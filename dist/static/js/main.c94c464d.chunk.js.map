{"version":3,"sources":["store/actions/apiCallsActions.jsx","components/LoadingIndicator.jsx","components/Inputs.jsx","App.js","store/reducers/rootReducer.jsx","serviceWorker.js","index.js"],"names":["myHeaders","Headers","append","LoadingIndicator","props","promiseInProgress","usePromiseTracker","className","color","size","Inputs","state","capShapeInput","capSurfaceInput","capColorInput","capBruisesInput","odorInput","inputText1","inputText2","inputText3","inputText4","inputText5","updateInput1","setState","updateInput2","updateInput3","updateInput4","updateInput5","SubmitRequest","sendData","type","id","data-toggle","aria-haspopup","aria-expanded","this","aria-labelledby","onClick","response","ColumnNames","length","Values","Component","connect","dispatch","input1","input2","input3","input4","input5","raw","JSON","stringify","requestOptions","method","headers","body","redirect","getState","trackPromise","fetch","proxyUrl","then","json","result","catch","error","fetchResponse","App","initState","rootReducer","action","console","log","Results","output1","value","err","Boolean","window","location","hostname","match","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c94c464d.chunk.js","sourcesContent":["import {trackPromise} from 'react-promise-tracker';\r\n\r\nvar myHeaders = new Headers();\r\nmyHeaders.append(\"Authorization\", \"Bearer zRthsELZ9Q2tzPGTJTJ+/3F6c6xyZPSa6cmbdpg2hsYMmgySXjK0w15toAr6L7HX6CrV6Dzx/ypqXRUjRpdpzA==\");\r\nmyHeaders.append(\"Content-Length\", \"1108\");\r\nmyHeaders.append(\"Connection\", \"keep-alive\");\r\nmyHeaders.append(\"Content-Type\", \"application/json\");\r\nmyHeaders.append(\"Accept\", \"application/json\");\r\n\r\n\r\nexport const fetchResponse = (input1,input2,input3,input4,input5) =>{ \r\n  var raw = JSON.stringify({\"Inputs\":{\"input1\":{\"ColumnNames\":[\"class\",\"cap-shape\",\"cap-surface\",\"cap-color\",\"bruises\",\"odor\",\"gill-attachment\",\"gill-spacing\",\"gill-size\",\"gill-color\",\"stalk-shape\",\"stalk-root\",\"stalk-surface-above-ring\",\"stalk-surface-below-ring\",\"stalk-color-above-ring\",\"stalk-color-below-ring\",\"veil-type\",\"veil-color\",\"ring-number\",\"ring-type\",\"spore-print-color\",\"population\",\"habitat\"],\"Values\":[[\"\",`${input1}`,`${input2}`,`${input3}`,`${input4}`,`${input5}`,\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\",\"\"]]}},\"GlobalParameters\":{}});\r\n  var requestOptions = {\r\n    method: 'POST',\r\n    headers: myHeaders,\r\n    body: raw,\r\n    redirect: 'follow'\r\n  };  \r\n  return (dispatch,getState)=>{\r\n        var proxyUrl = 'https://cors-anywhere.herokuapp.com/',\r\n        targetUrl = 'https://ussouthcentral.services.azureml.net/workspaces/4d31dfc7580248b6bf894724bf914b41/services/762baf005e81497dbcd774b1c397e735/execute?api-version=2.0&details=true'\r\n        trackPromise(\r\n          fetch(proxyUrl + targetUrl, requestOptions)\r\n              .then(response => response.json())\r\n              .then(result => dispatch({type:\"FETCH_RESULTS\",response:result}))\r\n              .catch(error => dispatch({type:\"FETCH_RESPONSE_ERROR\",error}))\r\n        );\r\n    }\r\n}","import React from 'react'\r\nimport { usePromiseTracker } from 'react-promise-tracker';\r\nimport { PacmanLoader } from 'react-spinners'\r\n\r\nexport const LoadingIndicator = props => {\r\n    const {promiseInProgress} = usePromiseTracker();\r\n    return(\r\n        <div>\r\n            {promiseInProgress &&\r\n                <div className=\"spinner\">\r\n                    <PacmanLoader color={\"#D7AC36\"} size=\"25px\"/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { fetchResponse } from '../store/actions/apiCallsActions'\r\nimport { LoadingIndicator } from './LoadingIndicator';\r\n\r\nclass Inputs extends Component {\r\n    state={\r\n        capShapeInput:\"\",\r\n        capSurfaceInput:\"\",\r\n        capColorInput:\"\",\r\n        capBruisesInput:\"\",\r\n        odorInput:\"\",\r\n        inputText1:\"Cap shape\",\r\n        inputText2:\"Cap surface\",\r\n        inputText3:\"Cap color\",\r\n        inputText4:\"Bruises\",\r\n        inputText5:\"Odor\"\r\n    }\r\n    updateInput1=(capShapeInput,inputText1)=>{\r\n        this.setState({\r\n            capShapeInput:capShapeInput,\r\n            inputText1:inputText1\r\n        })\r\n    }\r\n    updateInput2=(capSurfaceInput,inputText2)=>{\r\n        this.setState({\r\n            capSurfaceInput:capSurfaceInput,\r\n            inputText2:inputText2\r\n        })\r\n    }\r\n    updateInput3=(capColorInput,inputText3)=>{\r\n        this.setState({\r\n            capColorInput:capColorInput,\r\n            inputText3:inputText3\r\n        })\r\n    }\r\n    updateInput4=(capBruisesInput,inputText4)=>{\r\n        this.setState({\r\n            capBruisesInput:capBruisesInput,\r\n            inputText4:inputText4\r\n        })\r\n    }\r\n    updateInput5=(odorInput,inputText5)=>{\r\n        this.setState({\r\n            odorInput:odorInput,\r\n            inputText5:inputText5\r\n        })\r\n    }\r\n    SubmitRequest=()=>{\r\n        this.props.sendData(this.state.capShapeInput,this.state.capSurfaceInput,this.state.capColorInput,this.state.capBruisesInput,this.state.odorInput);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"dropdown\">\r\n                            <button className=\"btn-lg btn-secondary dropdown-toggle btn-block\" type=\"button\" id=\"dropdownMenuButton1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {this.state.inputText1}\r\n                            </button>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput1(\"b\",\"Bell\")}}>Bell</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput1(\"c\",\"Conical\")}}>Conical</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput1(\"x\",\"Convex\")}}>Convex</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput1(\"f\",\"Flat\")}}>Flat</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput1(\"k\",\"Knobbed\")}}>Knobbed</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput1(\"s\",\"Sunken\")}}>Sunken</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dropdown topbuffer\">\r\n                            <button className=\"btn-lg btn-secondary dropdown-toggle btn-block\" type=\"button\" id=\"dropdownMenuButton2\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {this.state.inputText2}\r\n                            </button>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput2(\"f\",\"Fibrous\")}}>Fibrous</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput2(\"g\",\"Grooves\")}}>Grooves</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput2(\"y\",\"Scaly\")}}>Scaly</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput2(\"s\",\"SMooth\")}}>SMooth</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dropdown topbuffer\">\r\n                            <button className=\"btn-lg btn-secondary dropdown-toggle btn-block\" type=\"button\" id=\"dropdownMenuButton3\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {this.state.inputText3}\r\n                            </button>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"n\",\"Brown\")}}>Brown</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"b\",\"Buff\")}}>Buff</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"c\",\"Cinnamon\")}}>Cinnamon</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"g\",\"Gray\")}}>Gray</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"r\",\"Green\")}}>Green</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"p\",\"Pink\")}}>Pink</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"u\",\"Purple\")}}>Purple</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"e\",\"Red\")}}>Red</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"w\",\"White\")}}>White</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput3(\"y\",\"Yellow\")}}>Yellow</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dropdown topbuffer\">\r\n                            <button className=\"btn-lg btn-secondary dropdown-toggle btn-block\" type=\"button\" id=\"dropdownMenuButton4\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {this.state.inputText4}\r\n                            </button>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput4(\"t\",\"Bruises\")}}>Bruises</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput4(\"f\",\"No bruises\")}}>No bruises</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"dropdown topbuffer\">\r\n                            <button className=\"btn-lg btn-secondary dropdown-toggle btn-block\" type=\"button\" id=\"dropdownMenuButton5\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\">\r\n                                {this.state.inputText5}\r\n                            </button>\r\n                            <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"a\",\"Almond\")}}>Almond</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"l\",\"Anise\")}}>Anise</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"c\",\"Creosote\")}}>Creosote</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"y\",\"Fishy\")}}>Fishy</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"f\",\"Foul\")}}>Foul</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"m\",\"Musty\")}}>Musty</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"p\",\"Pungent\")}}>Pungent</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"s\",\"Spicy\")}}>Spicy</p>\r\n                                <p className=\"dropdown-item\" onClick={()=>{this.updateInput5(\"n\",\"None\")}}>None</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"topbuffer\">\r\n                            <button className=\"btn-lg btn-success\" onClick={this.SubmitRequest}>\r\n                                Submit\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col\">\r\n                        <h1>Results:</h1>\r\n                        {this.props.response.ColumnNames && this.props.response.ColumnNames.length>0 &&\r\n                            <div>\r\n                                <p>{this.props.response.ColumnNames[0]}: {this.props.response.Values[0][0]}</p>\r\n                                <p>{this.props.response.ColumnNames[1]}: {this.props.response.Values[0][1]}</p>\r\n                                <p>{this.props.response.ColumnNames[2]}: {this.props.response.Values[0][2]==='e' ? (\"Edible\") : (\"Poisonous\")}</p>\r\n                            </div> \r\n                        }\r\n                        <LoadingIndicator/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        response:state.response\r\n    };\r\n  };\r\n  \r\n  const mapStateToDispatch = dispatch => {\r\n    return {\r\n      sendData: (input1,input2,input3,input4,input5) => dispatch(fetchResponse(input1,input2,input3,input4,input5))\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps,mapStateToDispatch)(Inputs);","import React from 'react';\nimport './App.css';\nimport Inputs from './components/Inputs';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Inputs/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const initState={\r\n    response : []\r\n}\r\nconst rootReducer= (state=initState,action) =>{\r\n    switch (action.type) {\r\n        case 'FETCH_RESULTS':\r\n            console.log('Fetched response', action.response.Results.output1.value)\r\n            return {...state, response:action.response.Results.output1.value};\r\n        case 'FETCH_RESPONSE_ERROR':\r\n            console.log('Fetch response error',action.err)\r\n            return state;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default rootReducer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './store/reducers/rootReducer'\nimport * as serviceWorker from './serviceWorker';\n\n\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\nReactDOM.render(\n<Provider store={store}>\n    <App />\n</Provider>, \ndocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}